version: '3.8'

services:
  copa-litoral-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: hotusoft/copa-litoral-backend:latest
    container_name: copa-litoral-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Variables espec√≠ficas para Docker
      - PORT=8080
      - GIN_MODE=release
      - CORS_ALLOWED_ORIGINS=https://apicopalitoral.hotusoft.com,https://www.apicopalitoral.hotusoft.com
      - ENVIRONMENT=production
    networks:
      - mi-red-proxy
    expose:
      - "8080"
    volumes:
      # Volumen para logs si es necesario
      - ./logs:/app/logs:rw
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - postgres
    labels:
      # Labels para Nginx Proxy Manager
      - "traefik.enable=false"
      - "com.docker.compose.service=copa-litoral-api"

  postgres:
    image: postgres:15-alpine
    container_name: copa-litoral-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-copa_litoral}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - mi-red-proxy
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-copa_litoral}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local
    name: copa_litoral_postgres_data

networks:
  mi-red-proxy:
    external: true
